#set path
getwd()
setwd("/Users/home/Desktop/submission")
#install packages
install.packages("dplyr")
install.packages("randomForest")
install.packages("caret")
install.packages("Metrics")
install.packages("mice")
# load library
library('dplyr')
library('randomForest')
library('caret')
library('Metrics')
library('mice')
# load and check data ---------------------------------------------------------------
## Reading the Training data into R
train <- read.csv("Train.csv",header = T, stringsAsFactors = F)
test <- read.csv("test.csv",header = T, stringsAsFactors = F)
sample_sub <- read.csv("sample_submission.csv",header = T, stringsAsFactors = F)
head(train)
head(test)
str(train)
str(test)
summary(train)
summary(test)
t<-train[!duplicated(train[,c('PID','Date')]),]
hospital <- left_join(test, t)
sum(is.na(t))
mice_mod <- mice(t[, ], method='rf')
mice_output <- complete(mice_mod)
t <- mice_output
sum(is.na(t))
t$PID<-(as.factor(t$PID))
t$Date<-as.factor(t$Date)
t$event1<-ifelse(t$Event>0,1,0)
t_reserved<-t
outcomeName<-c('event1')
predictors <- c('PID','Date','Event')
x<-expand.grid(PID=levels(train$PID),Date=levels(train$Date),Event=levels(train$Event))
all<-left_join(x,train)
# order data
train <- train[order(PID)]
test <- test[order(PID)]
# Predicting future events based on popular past events per patient -------
train_dcast <- dcast(data = train, PID ~ Event, length, value.var = "Event")
# get top 10 events per row
random_submit <- colnames(train_dcast)[-1][apply(train_dcast[,-c('PID'),with=F],1, function(x)order(-x)[1:10])]
# create the submission file
random_mat <- as.data.table((matrix(random_submit,ncol = 10, byrow = T)))
colnames(random_mat) <- colnames(sample_sub)[-1]
random_mat <- cbind(PID = test$PID, random_mat)
fwrite(random_mat,"random_sub.csv")
#############################################################################
